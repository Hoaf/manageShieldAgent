/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frame;

import DAO.AgentDAO;
import DAO.AgentMissionDAO;
import DAO.MissionDAO;
import DAO.MissionWeaponDAO;
import DTO.AgentMissionDTO;
import DTO.MissionDTO;
import DTO.MissionWeaponDTO;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sun.management.resources.agent;

/**
 *
 * @author HOA.f
 */
public class Agent extends javax.swing.JFrame {
    private DefaultTableModel missionModel = null;
    private DefaultTableModel teammateModel = null;
    private DefaultTableModel weaponModel = null;
    private List<MissionDTO> missionResult = null;

    /**
     * Creates new form agent
     */
    public Agent() {
        initComponents();
    }
    public Agent(String id) {
        initComponents();
        this.setLocation(350,130);
        this.setTitle("Agent of Shield");
        setIcon();
        setAgentName(id);
        missionModel = (DefaultTableModel) missionTable.getModel();
        teammateModel = (DefaultTableModel) teammateTable.getModel();
        weaponModel = (DefaultTableModel) weaponTable.getModel();
        loadMission(id);
        displayMission(missionResult);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        weaponTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        missionTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        teammateTable = new javax.swing.JTable();
        btnShowTeammate = new javax.swing.JButton();
        btnShowMission = new javax.swing.JButton();
        btnShowWeapon = new javax.swing.JButton();
        panelStatus = new javax.swing.JPanel();
        btnAccept = new javax.swing.JButton();
        btnAccomplished = new javax.swing.JButton();
        btnFailed = new javax.swing.JButton();
        labelAgentName = new javax.swing.JLabel();
        jLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(106, 18, 8));

        weaponTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        weaponTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Weapon "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(weaponTable);

        missionTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        missionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mission ", "Beginning Date", "Expiry Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        missionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                missionTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(missionTable);

        teammateTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        teammateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Teammate "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(teammateTable);

        btnShowTeammate.setText("Show Information");
        btnShowTeammate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowTeammateActionPerformed(evt);
            }
        });

        btnShowMission.setText("Show Infomation");
        btnShowMission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowMissionActionPerformed(evt);
            }
        });

        btnShowWeapon.setText("Show Information");
        btnShowWeapon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowWeaponActionPerformed(evt);
            }
        });

        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnAccomplished.setText("Accomplished");
        btnAccomplished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccomplishedActionPerformed(evt);
            }
        });

        btnFailed.setText("Failed");
        btnFailed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFailedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelStatusLayout = new javax.swing.GroupLayout(panelStatus);
        panelStatus.setLayout(panelStatusLayout);
        panelStatusLayout.setHorizontalGroup(
            panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAccomplished, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFailed, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelStatusLayout.setVerticalGroup(
            panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAccomplished, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAccept, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFailed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        labelAgentName.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelAgentName.setText("Hi, ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelAgentName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnShowWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(127, 127, 127)
                                .addComponent(btnShowMission, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(115, 115, 115)
                                .addComponent(btnShowTeammate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 12, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(panelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnShowTeammate)
                    .addComponent(btnShowMission)
                    .addComponent(btnShowWeapon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelAgentName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
            .addComponent(jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowMissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowMissionActionPerformed
        int row = missionTable.getSelectedRow();
        if(row >= 0){
            MissionDTO cur = missionResult.get(row);
            MissionFrame msFrame = new MissionFrame(cur);
            msFrame.setVisible(true);
        }
    }//GEN-LAST:event_btnShowMissionActionPerformed

    private void missionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_missionTableMouseClicked
        teammateModel.setRowCount(0);
        weaponModel.setRowCount(0);
        int row = missionTable.getSelectedRow();
        String mCode = (String)missionTable.getValueAt(row, 0);
        
        List<AgentMissionDTO> list = loadAgent(mCode);
        displayAgent(list);
        
        List<MissionWeaponDTO> listMW = loadWeapon(mCode);
        displayWeapon(listMW);
    }//GEN-LAST:event_missionTableMouseClicked

    private void btnShowTeammateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowTeammateActionPerformed
        int row = teammateTable.getSelectedRow();
        if(row >= 0){
            String aID =(String) teammateTable.getValueAt(row, 0);
            TeammateFrame tmFrame = new TeammateFrame(aID);
            tmFrame.setVisible(true);
        }
    }//GEN-LAST:event_btnShowTeammateActionPerformed

    private void btnShowWeaponActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowWeaponActionPerformed
        int row = weaponTable.getSelectedRow();
        if(row >= 0){
            String wCode = (String) weaponTable.getValueAt(row, 0);
            weaponFrame wF = new weaponFrame(wCode);
            wF.setVisible(true);
        }
    }//GEN-LAST:event_btnShowWeaponActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
            int row = missionTable.getSelectedRow();
            if(row  >= 0){
                missionResult.get(row).setStatus("Accepted");
                MissionDAO dao = new MissionDAO();
                try {
                    boolean updated = dao.update(missionResult.get(row));
                    if(updated){
                        JOptionPane.showMessageDialog(null, "Updated");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnAccomplishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccomplishedActionPerformed
            int row = missionTable.getSelectedRow();
            if(row  >= 0){
                missionResult.get(row).setStatus("Accomplished");
                MissionDAO dao = new MissionDAO();
                try {
                    boolean updated = dao.update(missionResult.get(row));
                    if(updated){
                        JOptionPane.showMessageDialog(null, "Updated");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
    }//GEN-LAST:event_btnAccomplishedActionPerformed

    private void btnFailedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFailedActionPerformed
            int row = missionTable.getSelectedRow();
            if(row  >= 0){
                missionResult.get(row).setStatus("Failed");
                MissionDAO dao = new MissionDAO();
                try {
                    boolean updated = dao.update(missionResult.get(row));
                    if(updated){
                        JOptionPane.showMessageDialog(null, "Updated");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
    }//GEN-LAST:event_btnFailedActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Login log = new Login();
        log.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing
    private void setAgentName(String id){
        AgentDAO dao = new AgentDAO();
        try {
            labelAgentName.setForeground(Color.WHITE);
            labelAgentName.setText("Hi, " + dao.getName(id) +". Update your mission's status below");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    private void loadMission(String id){
        missionResult = new ArrayList();
        AgentMissionDAO dao = new AgentMissionDAO();
        try {
            missionResult = dao.searchMissionByAID(id);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    private void displayMission(List<MissionDTO> list){
        for(MissionDTO dto : list){
            missionModel.addRow(dto.toVectorAgentFrame());
        }
    }
    private List<AgentMissionDTO> loadAgent(String mCode){
        List<AgentMissionDTO> result = new ArrayList();
        AgentMissionDAO dao = new AgentMissionDAO();
        try {
            result = dao.searchByMCode(mCode);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        return result;
    }
    private void displayAgent(List<AgentMissionDTO> list){
        for(AgentMissionDTO dto : list)
            teammateModel.addRow(dto.toVector());
    }
    private List<MissionWeaponDTO> loadWeapon(String mCode){
        List<MissionWeaponDTO> result = new ArrayList();
        MissionWeaponDAO dao = new MissionWeaponDAO();
        try {
            result = dao.searchWeapon(mCode);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        return result;
    }
    private void displayWeapon(List<MissionWeaponDTO> list){
        for(MissionWeaponDTO dto : list){
            weaponModel.addRow(dto.toVector());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Agent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnAccomplished;
    private javax.swing.JButton btnFailed;
    private javax.swing.JButton btnShowMission;
    private javax.swing.JButton btnShowTeammate;
    private javax.swing.JButton btnShowWeapon;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelAgentName;
    private javax.swing.JTable missionTable;
    private javax.swing.JPanel panelStatus;
    private javax.swing.JTable teammateTable;
    private javax.swing.JTable weaponTable;
    // End of variables declaration//GEN-END:variables
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.PNG")));
        try{
            BufferedImage img = ImageIO.read(new File("images\\label.PNG"));
            ImageIcon icon = new ImageIcon(img.getScaledInstance(jLabel.getWidth()+40, jLabel.getHeight()+50, img.SCALE_SMOOTH));
            jLabel.setIcon(icon);
            BufferedImage img1 = ImageIO.read(new File("images\\thor.PNG"));
            ImageIcon icon1 = new ImageIcon(img1.getScaledInstance(jLabel1.getWidth()+30, jLabel1.getHeight(), img1.SCALE_SMOOTH));
            jLabel1.setIcon(icon1);
            BufferedImage img2 = ImageIO.read(new File("images\\spider.PNG"));
            ImageIcon icon2 = new ImageIcon(img2.getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(), img2.SCALE_SMOOTH));
            jLabel2.setIcon(icon2);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
}
